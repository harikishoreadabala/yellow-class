{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\91970\\\\Desktop\\\\first-next\\\\pages\\\\index.js\",\n    _this = this;\n\nimport React, { Component } from \"react\";\nimport Navbar from \"../Components/Navbar\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nvar Index = function Index(_ref) {\n  var photos = _ref.photos;\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <Navbar />\n    //   <h1>Our Index Page</h1>\n    //   <ul>\n    //     {photos.map((photo) => (\n    //       <li key={photo.id}>\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\n    //         </Link>\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </div>\n    _jsxDEV(InfiniteScroll, {\n      dataLength: photos.length //This is important field to render the next data\n      ,\n      next: photos,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, _this),\n      endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Yay! You have seen it all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this) // below props only if you need pull down functionality\n      // refreshFunction={this.refresh}\n      ,\n      pullDownToRefresh: true,\n      pullDownToRefreshThreshold: 50,\n      pullDownToRefreshContent: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\u2193 Pull down to refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this),\n      releaseToRefreshContent: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\u2191 Release to refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this),\n      children: photos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"https://api.unsplash.com/photos/?client_id=oPeX2b24aAVWiEmjKq0I2RRr6XbF_KpwUutWmFufaGU&per_page=400\");\n\n          case 2:\n            res = _context.sent;\n            data = res.data;\n            return _context.abrupt(\"return\", {\n              photos: data\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/91970/Desktop/first-next/pages/index.js"],"names":["React","Component","Navbar","Link","axios","InfiniteScroll","Index","photos","length","textAlign","getInitialProps","ctx","get","res","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC5B;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,cAAD;AACE,MAAA,UAAU,EAAEA,MAAM,CAACC,MADrB,CAC6B;AAD7B;AAEE,MAAA,IAAI,EAAED,MAFR;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJV;AAKE,MAAA,UAAU,eACR;AAAG,QAAA,KAAK,EAAE;AAAEE,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eANJ,CAUE;AACA;AAXF;AAYE,MAAA,iBAAiB,MAZnB;AAaE,MAAA,0BAA0B,EAAE,EAb9B;AAcE,MAAA,wBAAwB,eACtB;AAAI,QAAA,KAAK,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfJ;AAiBE,MAAA,uBAAuB,eACrB;AAAI,QAAA,KAAK,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBJ;AAAA,gBAqBGF;AArBH;AAAA;AAAA;AAAA;AAAA;AAdF;AAsCD,CAvCD;;KAAMD,K;;AAwCNA,KAAK,CAACI,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJP,KAAK,CAACQ,GAAN,CAChB,qGADgB,CADI;;AAAA;AAChBC,YAAAA,GADgB;AAIdC,YAAAA,IAJc,GAILD,GAJK,CAIdC,IAJc;AAAA,6CAKf;AAAEP,cAAAA,MAAM,EAAEO;AAAV,aALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeR,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nconst Index = ({ photos }) => {\r\n  return (\r\n    // <div>\r\n    //   <Navbar />\r\n    //   <h1>Our Index Page</h1>\r\n    //   <ul>\r\n    //     {photos.map((photo) => (\r\n    //       <li key={photo.id}>\r\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\r\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\r\n    //         </Link>\r\n    //       </li>\r\n    //     ))}\r\n    //   </ul>\r\n    // </div>\r\n    <InfiniteScroll\r\n      dataLength={photos.length} //This is important field to render the next data\r\n      next={photos}\r\n      hasMore={true}\r\n      loader={<h4>Loading...</h4>}\r\n      endMessage={\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <b>Yay! You have seen it all</b>\r\n        </p>\r\n      }\r\n      // below props only if you need pull down functionality\r\n      // refreshFunction={this.refresh}\r\n      pullDownToRefresh\r\n      pullDownToRefreshThreshold={50}\r\n      pullDownToRefreshContent={\r\n        <h3 style={{ textAlign: \"center\" }}>&#8595; Pull down to refresh</h3>\r\n      }\r\n      releaseToRefreshContent={\r\n        <h3 style={{ textAlign: \"center\" }}>&#8593; Release to refresh</h3>\r\n      }\r\n    >\r\n      {photos}\r\n    </InfiniteScroll>\r\n  );\r\n};\r\nIndex.getInitialProps = async (ctx) => {\r\n  const res = await axios.get(\r\n    \"https://api.unsplash.com/photos/?client_id=oPeX2b24aAVWiEmjKq0I2RRr6XbF_KpwUutWmFufaGU&per_page=400\"\r\n  );\r\n  const { data } = res;\r\n  return { photos: data };\r\n};\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}