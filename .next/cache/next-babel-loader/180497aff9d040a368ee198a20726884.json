{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\91970\\\\Desktop\\\\first-next\\\\pages\\\\index.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"../Components/Navbar\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nfetchMoreData = () => {\n  // a fake async api call like which sends\n  // 20 more records in 1.5 secs\n  setTimeout(() => {\n    this.setState({\n      items: this.state.items.concat(Array.from({\n        length: 20\n      }))\n    });\n  }, 1500);\n};\n\nconst Index = ({\n  photos\n}) => {\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <Navbar />\n    //   <h1>Our Index Page</h1>\n    //   <ul>\n    //     {photos.map((photo) => (\n    //       <li key={photo.id}>\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\n    //         </Link>\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </div>\n    // <InfiniteScroll\n    //   dataLength={photos.length} //This is important field to render the next data\n    //   next={photos}\n    //   hasMore={true}\n    //   loader={<h4>Loading...</h4>}\n    //   endMessage={\n    //     <p style={{ textAlign: \"center\" }}>\n    //       <b>Yay! You have seen it all</b>\n    //     </p>\n    //   }\n    //   // below props only if you need pull down functionality\n    //   refreshFunction={photos}\n    //   pullDownToRefresh\n    //   pullDownToRefreshThreshold={50}\n    //   pullDownToRefreshContent={\n    //     <h3 style={{ textAlign: \"center\" }}>&#8595; Pull down to refresh</h3>\n    //   }\n    //   releaseToRefreshContent={\n    //     <h3 style={{ textAlign: \"center\" }}>&#8593; Release to refresh</h3>\n    //   }\n    // >\n    //   <ul>\n    //     //{\" \"}\n    //     {photos.map((photo) => (\n    //       <li key={photo.id}>\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\n    //         </Link>\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </InfiniteScroll>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"demo: react-infinite-scroll-component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: photos.length,\n        next: this.fetchMoreData,\n        hasMore: true,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this),\n        children: this.state.items.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style,\n          children: [\"div - #\", index]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  );\n};\n\nIndex.getInitialProps = async ctx => {\n  const res = await axios.get(\"https://api.unsplash.com/photos/?client_id=oPeX2b24aAVWiEmjKq0I2RRr6XbF_KpwUutWmFufaGU&per_page=400\");\n  const {\n    data\n  } = res;\n  return {\n    photos: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/91970/Desktop/first-next/pages/index.js"],"names":["React","Component","Navbar","Link","axios","InfiniteScroll","fetchMoreData","setTimeout","setState","items","state","concat","Array","from","length","Index","photos","map","i","index","style","getInitialProps","ctx","res","get","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AACAC,aAAa,GAAG,MAAM;AACpB;AACA;AACAC,EAAAA,UAAU,CAAC,MAAM;AACf,SAAKC,QAAL,CAAc;AACZC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,MAAjB,CAAwBC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX,CAAxB;AADK,KAAd;AAGD,GAJS,EAIP,IAJO,CAAV;AAKD,CARD;;AASA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC5B;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,cAAD;AACE,QAAA,UAAU,EAAEA,MAAM,CAACF,MADrB;AAEE,QAAA,IAAI,EAAE,KAAKR,aAFb;AAGE,QAAA,OAAO,EAAE,IAHX;AAIE,QAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJV;AAAA,kBAMG,KAAKI,KAAL,CAAWD,KAAX,CAAiBQ,GAAjB,CAAqB,CAACC,CAAD,EAAIC,KAAJ,kBACpB;AAAK,UAAA,KAAK,EAAEC,KAAZ;AAAA,gCACUD,KADV;AAAA,WAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AA9CF;AA+DD,CAhED;;AAiEAJ,KAAK,CAACM,eAAN,GAAwB,MAAOC,GAAP,IAAe;AACrC,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAChB,qGADgB,CAAlB;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAWF,GAAjB;AACA,SAAO;AAAEP,IAAAA,MAAM,EAAES;AAAV,GAAP;AACD,CAND;;AAOA,eAAeV,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nfetchMoreData = () => {\r\n  // a fake async api call like which sends\r\n  // 20 more records in 1.5 secs\r\n  setTimeout(() => {\r\n    this.setState({\r\n      items: this.state.items.concat(Array.from({ length: 20 })),\r\n    });\r\n  }, 1500);\r\n};\r\nconst Index = ({ photos }) => {\r\n  return (\r\n    // <div>\r\n    //   <Navbar />\r\n    //   <h1>Our Index Page</h1>\r\n    //   <ul>\r\n    //     {photos.map((photo) => (\r\n    //       <li key={photo.id}>\r\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\r\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\r\n    //         </Link>\r\n    //       </li>\r\n    //     ))}\r\n    //   </ul>\r\n    // </div>\r\n    // <InfiniteScroll\r\n    //   dataLength={photos.length} //This is important field to render the next data\r\n    //   next={photos}\r\n    //   hasMore={true}\r\n    //   loader={<h4>Loading...</h4>}\r\n    //   endMessage={\r\n    //     <p style={{ textAlign: \"center\" }}>\r\n    //       <b>Yay! You have seen it all</b>\r\n    //     </p>\r\n    //   }\r\n    //   // below props only if you need pull down functionality\r\n    //   refreshFunction={photos}\r\n    //   pullDownToRefresh\r\n    //   pullDownToRefreshThreshold={50}\r\n    //   pullDownToRefreshContent={\r\n    //     <h3 style={{ textAlign: \"center\" }}>&#8595; Pull down to refresh</h3>\r\n    //   }\r\n    //   releaseToRefreshContent={\r\n    //     <h3 style={{ textAlign: \"center\" }}>&#8593; Release to refresh</h3>\r\n    //   }\r\n    // >\r\n    //   <ul>\r\n    //     //{\" \"}\r\n    //     {photos.map((photo) => (\r\n    //       <li key={photo.id}>\r\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\r\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\r\n    //         </Link>\r\n    //       </li>\r\n    //     ))}\r\n    //   </ul>\r\n    // </InfiniteScroll>\r\n    <div>\r\n      <h1>demo: react-infinite-scroll-component</h1>\r\n      <hr />\r\n      <InfiniteScroll\r\n        dataLength={photos.length}\r\n        next={this.fetchMoreData}\r\n        hasMore={true}\r\n        loader={<h4>Loading...</h4>}\r\n      >\r\n        {this.state.items.map((i, index) => (\r\n          <div style={style} key={index}>\r\n            div - #{index}\r\n          </div>\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\nIndex.getInitialProps = async (ctx) => {\r\n  const res = await axios.get(\r\n    \"https://api.unsplash.com/photos/?client_id=oPeX2b24aAVWiEmjKq0I2RRr6XbF_KpwUutWmFufaGU&per_page=400\"\r\n  );\r\n  const { data } = res;\r\n  return { photos: data };\r\n};\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}