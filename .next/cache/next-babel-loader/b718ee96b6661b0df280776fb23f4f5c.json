{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\91970\\\\Desktop\\\\first-next\\\\pages\\\\index.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"../Components/Navbar\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nvar temp = {};\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst fetchMoreData = async () => {\n  const r = await axios.get(\"https://api.unsplash.com/photos/?client_id=oPeX2b24aAVWiEmjKq0I2RRr6XbF_KpwUutWmFufaGU\");\n  var r2 = r.data;\n  console.log(r2);\n  var t2 = Object.assign(temp, r2);\n  console.log(\"***\");\n  console.log(t2);\n  console.log(temp);\n  console.log(\"***\");\n  return temp;\n};\n\nconst Index = ({\n  photos\n}) => {\n  console.log(photos);\n  temp = photos;\n  console.log(temp);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <Navbar />\n    //   <h1>Our Index Page</h1>\n    //   <ul>\n    //     {photos.map((photo) => (\n    //       <li key={photo.id}>\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\n    //         </Link>\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </div>\n    // <InfiniteScroll\n    //   dataLength={photos.length} //This is important field to render the next data\n    //   next={photos}\n    //   hasMore={true}\n    //   loader={<h4>Loading...</h4>}\n    //   endMessage={\n    //     <p style={{ textAlign: \"center\" }}>\n    //       <b>Yay! You have seen it all</b>\n    //     </p>\n    //   }\n    //   // below props only if you need pull down functionality\n    //   refreshFunction={photos}\n    //   pullDownToRefresh\n    //   pullDownToRefreshThreshold={50}\n    //   pullDownToRefreshContent={\n    //     <h3 style={{ textAlign: \"center\" }}>&#8595; Pull down to refresh</h3>\n    //   }\n    //   releaseToRefreshContent={\n    //     <h3 style={{ textAlign: \"center\" }}>&#8593; Release to refresh</h3>\n    //   }\n    // >\n    //   <ul>\n    //     //{\" \"}\n    //     {photos.map((photo) => (\n    //       <li key={photo.id}>\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\n    //         </Link>\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </InfiniteScroll>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"demo: react-infinite-scroll-component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: photos.length,\n        next: fetchMoreData,\n        hasMore: true,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: temp.map(photo => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: `/photo?id=${photo.urls.small}`,\n              as: \"photo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: photo.urls.small,\n                width: \"500\",\n                height: \"300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, photo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  );\n};\n\nIndex.getInitialProps = async ctx => {\n  const res = await axios.get(\"https://api.unsplash.com/photos/?client_id=oPeX2b24aAVWiEmjKq0I2RRr6XbF_KpwUutWmFufaGU\");\n  const {\n    data\n  } = res; // temp = { ...data };\n\n  temp = Object.assign({}, res); // console.log(typeof res + \"****\" + typeof temp);\n  // console.log(res);\n\n  console.log(temp);\n  return {\n    photos: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/91970/Desktop/first-next/pages/index.js"],"names":["React","Component","Navbar","Link","axios","temp","InfiniteScroll","fetchMoreData","r","get","r2","data","console","log","t2","Object","assign","Index","photos","length","map","photo","urls","small","id","getInitialProps","ctx","res"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nvar temp = {};\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nconst fetchMoreData = async () => {\r\n  const r = await axios.get(\r\n    \"https://api.unsplash.com/photos/?client_id=oPeX2b24aAVWiEmjKq0I2RRr6XbF_KpwUutWmFufaGU\"\r\n  );\r\n  var r2 = r.data;\r\n  console.log(r2);\r\n  var t2 = Object.assign(temp, r2);\r\n  console.log(\"***\");\r\n  console.log(t2);\r\n  console.log(temp);\r\n  console.log(\"***\");\r\n  return temp;\r\n};\r\n\r\nconst Index = ({ photos }) => {\r\n  console.log(photos);\r\n  temp = photos;\r\n  console.log(temp);\r\n  return (\r\n    // <div>\r\n    //   <Navbar />\r\n    //   <h1>Our Index Page</h1>\r\n    //   <ul>\r\n    //     {photos.map((photo) => (\r\n    //       <li key={photo.id}>\r\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\r\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\r\n    //         </Link>\r\n    //       </li>\r\n    //     ))}\r\n    //   </ul>\r\n    // </div>\r\n    // <InfiniteScroll\r\n    //   dataLength={photos.length} //This is important field to render the next data\r\n    //   next={photos}\r\n    //   hasMore={true}\r\n    //   loader={<h4>Loading...</h4>}\r\n    //   endMessage={\r\n    //     <p style={{ textAlign: \"center\" }}>\r\n    //       <b>Yay! You have seen it all</b>\r\n    //     </p>\r\n    //   }\r\n    //   // below props only if you need pull down functionality\r\n    //   refreshFunction={photos}\r\n    //   pullDownToRefresh\r\n    //   pullDownToRefreshThreshold={50}\r\n    //   pullDownToRefreshContent={\r\n    //     <h3 style={{ textAlign: \"center\" }}>&#8595; Pull down to refresh</h3>\r\n    //   }\r\n    //   releaseToRefreshContent={\r\n    //     <h3 style={{ textAlign: \"center\" }}>&#8593; Release to refresh</h3>\r\n    //   }\r\n    // >\r\n    //   <ul>\r\n    //     //{\" \"}\r\n    //     {photos.map((photo) => (\r\n    //       <li key={photo.id}>\r\n    //         <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\r\n    //           <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\r\n    //         </Link>\r\n    //       </li>\r\n    //     ))}\r\n    //   </ul>\r\n    // </InfiniteScroll>\r\n    <div>\r\n      <h1>demo: react-infinite-scroll-component</h1>\r\n      <hr />\r\n      <InfiniteScroll\r\n        dataLength={photos.length}\r\n        next={fetchMoreData}\r\n        hasMore={true}\r\n        loader={<h4>Loading...</h4>}\r\n      >\r\n        <ul>\r\n          {temp.map((photo) => (\r\n            <li key={photo.id}>\r\n              <Link href={`/photo?id=${photo.urls.small}`} as=\"photo\">\r\n                <img src={photo.urls.small} width=\"500\" height=\"300\"></img>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\nIndex.getInitialProps = async (ctx) => {\r\n  const res = await axios.get(\r\n    \"https://api.unsplash.com/photos/?client_id=oPeX2b24aAVWiEmjKq0I2RRr6XbF_KpwUutWmFufaGU\"\r\n  );\r\n  const { data } = res;\r\n  // temp = { ...data };\r\n  temp = Object.assign({}, res);\r\n  // console.log(typeof res + \"****\" + typeof temp);\r\n  // console.log(res);\r\n  console.log(temp);\r\n  return { photos: data };\r\n};\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}